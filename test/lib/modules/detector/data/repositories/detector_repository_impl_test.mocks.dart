// Mocks generated by Mockito 5.0.7 from annotations
// in language_detector/test/lib/modules/detector/data/repositories/detector_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:language_detector/modules/core/platform/network_info.dart'
    as _i6;
import 'package:language_detector/modules/detector/data/datasources/detector_local_datasource.dart'
    as _i3;
import 'package:language_detector/modules/detector/data/datasources/detector_remote_datasource.dart'
    as _i5;
import 'package:language_detector/modules/detector/domain/entities/language.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeLanguage extends _i1.Fake implements _i2.Language {}

/// A class which mocks [DetectorLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetectorLocalDatasource extends _i1.Mock
    implements _i3.DetectorLocalDatasource {
  MockDetectorLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Language get cachedLanguage =>
      (super.noSuchMethod(Invocation.getter(#cachedLanguage),
          returnValue: _FakeLanguage()) as _i2.Language);
  @override
  _i4.Future<void> cacheLanguage(_i2.Language? language) =>
      (super.noSuchMethod(Invocation.method(#cacheLanguage, [language]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}

/// A class which mocks [DetectorRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDetectorRemoteDatasource extends _i1.Mock
    implements _i5.DetectorRemoteDatasource {
  MockDetectorRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Language> getLanguage(String? input) =>
      (super.noSuchMethod(Invocation.method(#getLanguage, [input]),
              returnValue: Future<_i2.Language>.value(_FakeLanguage()))
          as _i4.Future<_i2.Language>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
